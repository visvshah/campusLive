{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrie\\\\Documents\\\\GitHub\\\\campusLive\\\\front\\\\src\\\\components\\\\Mapbox\\\\mapbox.jsx\",\n    _s = $RefreshSig$();\n\n// import \"./mapbox.css\"\n// import React, { useRef, useEffect, useState } from 'react';\n// import mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n// mapboxgl.accessToken = 'pk.eyJ1IjoiYWRyaWVucWkiLCJhIjoiY2w4NWVkOGRtMHAwNjNzbzBqa3JzcG5sdCJ9.g1U7-gzoDDuGNtrY-P18-w';\n// export default function App() {\n//   const mapContainer = useRef(null);\n//   const map = useRef(null);\n//   const [lng, setLng] = useState(-70.9);\n//   const [lat, setLat] = useState(42.35);\n//   const [zoom, setZoom] = useState(9);\n//   useEffect(() => {\n//     if (map.current) return; // initialize map only once\n//     map.current = new mapboxgl.Map({\n//       container: mapContainer.current,\n//       style: 'mapbox://styles/mapbox/streets-v11',\n//       center: [lng, lat],\n//       zoom: zoom\n//     });\n//   });\n//   useEffect(() => {\n//     if (!map.current) return; // wait for map to initialize\n//     map.current.on('move', () => {\n//       setLng(map.current.getCenter().lng.toFixed(4));\n//       setLat(map.current.getCenter().lat.toFixed(4));\n//       setZoom(map.current.getZoom().toFixed(2));\n//     });\n//   });\n//   return (\n//     <div>\n//       <div className=\"sidebar\">\n//         Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n//       </div>\n//       <div ref={mapContainer} className=\"map-container\" />\n//     </div>\n//   );\n// }\nimport mapboxgl from \"mapbox-gl\";\nimport React, { useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport geoJson from \"./chicago-parks.json\";\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA\";\n\nconst Marker = _ref => {\n  let {\n    onClick,\n    children,\n    feature\n  } = _ref;\n\n  const _onClick = () => {\n    onClick(feature.properties.description);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: _onClick,\n    className: \"marker\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Marker;\n\nconst Map = () => {\n  _s();\n\n  const mapContainerRef = useRef(null); // Initialize map when component mounts\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-87.65, 41.84],\n      zoom: 10\n    }); // Render custom marker components\n\n    geoJson.features.forEach(feature => {\n      // Create a React ref\n      const ref = /*#__PURE__*/React.createRef(); // Create a new DOM node and save it to the React ref\n\n      ref.current = document.createElement(\"div\"); // Render a Marker Component on our new DOM node\n\n      ReactDOM.render( /*#__PURE__*/_jsxDEV(Marker, {\n        onClick: markerClicked,\n        feature: feature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), ref.current); // Create a Mapbox Marker at our new DOM node\n\n      new mapboxgl.Marker(ref.current).setLngLat(feature.geometry.coordinates).addTo(map);\n    }); // Add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\"); // Clean up on unmount\n\n    return () => map.remove();\n  }, []);\n\n  const markerClicked = title => {\n    window.alert(title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    ref: mapContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Map, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n\n_c2 = Map;\nexport default Map;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Marker\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["mapboxgl","React","useEffect","useRef","ReactDOM","geoJson","accessToken","Marker","onClick","children","feature","_onClick","properties","description","Map","mapContainerRef","map","container","current","style","center","zoom","features","forEach","ref","createRef","document","createElement","render","markerClicked","setLngLat","geometry","coordinates","addTo","addControl","NavigationControl","remove","title","window","alert"],"sources":["C:/Users/adrie/Documents/GitHub/campusLive/front/src/components/Mapbox/mapbox.jsx"],"sourcesContent":["// import \"./mapbox.css\"\r\n// import React, { useRef, useEffect, useState } from 'react';\r\n// import mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\n\r\n// mapboxgl.accessToken = 'pk.eyJ1IjoiYWRyaWVucWkiLCJhIjoiY2w4NWVkOGRtMHAwNjNzbzBqa3JzcG5sdCJ9.g1U7-gzoDDuGNtrY-P18-w';\r\n\r\n// export default function App() {\r\n\r\n//   const mapContainer = useRef(null);\r\n//   const map = useRef(null);\r\n//   const [lng, setLng] = useState(-70.9);\r\n//   const [lat, setLat] = useState(42.35);\r\n//   const [zoom, setZoom] = useState(9);\r\n\r\n//   useEffect(() => {\r\n//     if (map.current) return; // initialize map only once\r\n//     map.current = new mapboxgl.Map({\r\n//       container: mapContainer.current,\r\n//       style: 'mapbox://styles/mapbox/streets-v11',\r\n//       center: [lng, lat],\r\n//       zoom: zoom\r\n//     });\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     if (!map.current) return; // wait for map to initialize\r\n//     map.current.on('move', () => {\r\n//       setLng(map.current.getCenter().lng.toFixed(4));\r\n//       setLat(map.current.getCenter().lat.toFixed(4));\r\n//       setZoom(map.current.getZoom().toFixed(2));\r\n//     });\r\n//   });\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"sidebar\">\r\n//         Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n//       </div>\r\n//       <div ref={mapContainer} className=\"map-container\" />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport geoJson from \"./chicago-parks.json\";\r\nimport \"./Map.css\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA\";\r\n\r\nconst Marker = ({ onClick, children, feature }) => {\r\n  const _onClick = () => {\r\n    onClick(feature.properties.description);\r\n  };\r\n\r\n  return (\r\n    <button onClick={_onClick} className=\"marker\">\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst Map = () => {\r\n  const mapContainerRef = useRef(null);\r\n\r\n  // Initialize map when component mounts\r\n  useEffect(() => {\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      style: \"mapbox://styles/mapbox/streets-v11\",\r\n      center: [-87.65, 41.84],\r\n      zoom: 10,\r\n    });\r\n\r\n    // Render custom marker components\r\n    geoJson.features.forEach((feature) => {\r\n      // Create a React ref\r\n      const ref = React.createRef();\r\n      // Create a new DOM node and save it to the React ref\r\n      ref.current = document.createElement(\"div\");\r\n      // Render a Marker Component on our new DOM node\r\n      ReactDOM.render(\r\n        <Marker onClick={markerClicked} feature={feature} />,\r\n        ref.current\r\n      );\r\n\r\n      // Create a Mapbox Marker at our new DOM node\r\n      new mapboxgl.Marker(ref.current)\r\n        .setLngLat(feature.geometry.coordinates)\r\n        .addTo(map);\r\n    });\r\n\r\n    // Add navigation control (the +/- zoom buttons)\r\n    map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\r\n\r\n    // Clean up on unmount\r\n    return () => map.remove();\r\n  }, []);\r\n\r\n  const markerClicked = (title) => {\r\n    window.alert(title);\r\n  };\r\n\r\n  return <div className=\"map-container\" ref={mapContainerRef} />;\r\n};\r\n\r\nexport default Map;"],"mappings":";;;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;;AAEAL,QAAQ,CAACM,WAAT,GACE,0FADF;;AAGA,MAAMC,MAAM,GAAG,QAAoC;EAAA,IAAnC;IAAEC,OAAF;IAAWC,QAAX;IAAqBC;EAArB,CAAmC;;EACjD,MAAMC,QAAQ,GAAG,MAAM;IACrBH,OAAO,CAACE,OAAO,CAACE,UAAR,CAAmBC,WAApB,CAAP;EACD,CAFD;;EAIA,oBACE;IAAQ,OAAO,EAAEF,QAAjB;IAA2B,SAAS,EAAC,QAArC;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAVD;;KAAMF,M;;AAYN,MAAMO,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAMC,eAAe,GAAGZ,MAAM,CAAC,IAAD,CAA9B,CADgB,CAGhB;;EACAD,SAAS,CAAC,MAAM;IACd,MAAMc,GAAG,GAAG,IAAIhB,QAAQ,CAACc,GAAb,CAAiB;MAC3BG,SAAS,EAAEF,eAAe,CAACG,OADA;MAE3BC,KAAK,EAAE,oCAFoB;MAG3BC,MAAM,EAAE,CAAC,CAAC,KAAF,EAAS,KAAT,CAHmB;MAI3BC,IAAI,EAAE;IAJqB,CAAjB,CAAZ,CADc,CAQd;;IACAhB,OAAO,CAACiB,QAAR,CAAiBC,OAAjB,CAA0Bb,OAAD,IAAa;MACpC;MACA,MAAMc,GAAG,gBAAGvB,KAAK,CAACwB,SAAN,EAAZ,CAFoC,CAGpC;;MACAD,GAAG,CAACN,OAAJ,GAAcQ,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd,CAJoC,CAKpC;;MACAvB,QAAQ,CAACwB,MAAT,eACE,QAAC,MAAD;QAAQ,OAAO,EAAEC,aAAjB;QAAgC,OAAO,EAAEnB;MAAzC;QAAA;QAAA;QAAA;MAAA,QADF,EAEEc,GAAG,CAACN,OAFN,EANoC,CAWpC;;MACA,IAAIlB,QAAQ,CAACO,MAAb,CAAoBiB,GAAG,CAACN,OAAxB,EACGY,SADH,CACapB,OAAO,CAACqB,QAAR,CAAiBC,WAD9B,EAEGC,KAFH,CAESjB,GAFT;IAGD,CAfD,EATc,CA0Bd;;IACAA,GAAG,CAACkB,UAAJ,CAAe,IAAIlC,QAAQ,CAACmC,iBAAb,EAAf,EAAiD,WAAjD,EA3Bc,CA6Bd;;IACA,OAAO,MAAMnB,GAAG,CAACoB,MAAJ,EAAb;EACD,CA/BQ,EA+BN,EA/BM,CAAT;;EAiCA,MAAMP,aAAa,GAAIQ,KAAD,IAAW;IAC/BC,MAAM,CAACC,KAAP,CAAaF,KAAb;EACD,CAFD;;EAIA,oBAAO;IAAK,SAAS,EAAC,eAAf;IAA+B,GAAG,EAAEtB;EAApC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CA1CD;;GAAMD,G;;MAAAA,G;AA4CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}