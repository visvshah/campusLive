{"ast":null,"code":"/* global document */\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useEffect, useMemo, useRef, useContext } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport { MapContext } from './map';\nimport { arePointsEqual } from '../utils/deep-equal';\nconst defaultProps = {\n  draggable: false,\n  popup: null,\n  rotation: 0,\n  rotationAlignment: 'auto',\n  pitchAlignment: 'auto'\n};\n/* eslint-disable complexity,max-statements */\n\nfunction Marker(props) {\n  const {\n    map,\n    mapLib\n  } = useContext(MapContext);\n  const thisRef = useRef({\n    props\n  });\n  thisRef.current.props = props;\n  const marker = useMemo(() => {\n    let hasChildren = false;\n    React.Children.forEach(props.children, el => {\n      if (el) {\n        hasChildren = true;\n      }\n    });\n    const options = { ...props,\n      element: hasChildren ? document.createElement('div') : null\n    };\n    const mk = new mapLib.Marker(options).setLngLat([props.longitude, props.latitude]);\n    mk.getElement().addEventListener('click', e => {\n      var _a, _b;\n\n      (_b = (_a = thisRef.current.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, {\n        type: 'click',\n        target: mk,\n        originalEvent: e\n      });\n    });\n    mk.on('dragstart', e => {\n      var _a, _b;\n\n      const evt = e;\n      evt.lngLat = marker.getLngLat();\n      (_b = (_a = thisRef.current.props).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n    });\n    mk.on('drag', e => {\n      var _a, _b;\n\n      const evt = e;\n      evt.lngLat = marker.getLngLat();\n      (_b = (_a = thisRef.current.props).onDrag) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n    });\n    mk.on('dragend', e => {\n      var _a, _b;\n\n      const evt = e;\n      evt.lngLat = marker.getLngLat();\n      (_b = (_a = thisRef.current.props).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n    });\n    return mk;\n  }, []);\n  useEffect(() => {\n    marker.addTo(map.getMap());\n    return () => {\n      marker.remove();\n    };\n  }, []);\n  useEffect(() => {\n    applyReactStyle(marker.getElement(), props.style);\n  }, [props.style]);\n\n  if (marker.getLngLat().lng !== props.longitude || marker.getLngLat().lat !== props.latitude) {\n    marker.setLngLat([props.longitude, props.latitude]);\n  }\n\n  if (props.offset && !arePointsEqual(marker.getOffset(), props.offset)) {\n    marker.setOffset(props.offset);\n  }\n\n  if (marker.isDraggable() !== props.draggable) {\n    marker.setDraggable(props.draggable);\n  }\n\n  if (marker.getRotation() !== props.rotation) {\n    marker.setRotation(props.rotation);\n  }\n\n  if (marker.getRotationAlignment() !== props.rotationAlignment) {\n    marker.setRotationAlignment(props.rotationAlignment);\n  }\n\n  if (marker.getPitchAlignment() !== props.pitchAlignment) {\n    marker.setPitchAlignment(props.pitchAlignment);\n  }\n\n  if (marker.getPopup() !== props.popup) {\n    marker.setPopup(props.popup);\n  }\n\n  return createPortal(props.children, marker.getElement());\n}\n\nMarker.defaultProps = defaultProps; // @ts-ignore\n\nexport default React.memo(Marker);","map":{"version":3,"mappings":"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","names":["React","createPortal","useEffect","useMemo","useRef","useContext","applyReactStyle","MapContext","arePointsEqual","defaultProps","draggable","popup","rotation","rotationAlignment","pitchAlignment","Marker","props","map","mapLib","thisRef","current","marker","hasChildren","Children","forEach","children","el","options","element","document","createElement","mk","setLngLat","longitude","latitude","getElement","addEventListener","e","onClick","_b","type","target","originalEvent","on","evt","lngLat","getLngLat","onDragStart","onDrag","onDragEnd","addTo","getMap","remove","style","lng","lat","offset","getOffset","setOffset","isDraggable","setDraggable","getRotation","setRotation","getRotationAlignment","setRotationAlignment","getPitchAlignment","setPitchAlignment","getPopup","setPopup","memo"],"sources":["C:\\Users\\adrie\\Documents\\GitHub\\campusLive\\front\\node_modules\\react-map-gl\\src\\components\\marker.ts"],"sourcesContent":["/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useEffect, useMemo, useRef, useContext} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {\n  MarkerDragEvent,\n  MapboxPopup,\n  PointLike,\n  Anchor,\n  Alignment,\n  MapboxEvent,\n  MapboxMarker\n} from '../types';\n\nimport {MapContext} from './map';\nimport {arePointsEqual} from '../utils/deep-equal';\n\nexport type MarkerProps = {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n  /** A string indicating the part of the Marker that should be positioned closest to the coordinate set via Marker.setLngLat.\n   * Options are `'center'`, `'top'`, `'bottom'`, `'left'`, `'right'`, `'top-left'`, `'top-right'`, `'bottom-left'`, and `'bottom-right'`.\n   * @default \"center\"\n   */\n  anchor?: Anchor;\n  /**\n   * The max number of pixels a user can shift the mouse pointer during a click on the marker for it to be considered a valid click\n   * (as opposed to a marker drag). The default (0) is to inherit map's clickTolerance.\n   */\n  clickTolerance?: number;\n  /** The color to use for the default marker if options.element is not provided.\n   * @default \"#3FB1CE\"\n   */\n  color?: string;\n  /** A boolean indicating whether or not a marker is able to be dragged to a new position on the map.\n   * @default false\n   */\n  draggable?: boolean;\n  /** The offset in pixels as a PointLike object to apply relative to the element's center. Negatives indicate left and up. */\n  offset?: PointLike;\n  /** `map` aligns the `Marker` to the plane of the map.\n   * `viewport` aligns the `Marker` to the plane of the viewport.\n   * `auto` automatically matches the value of `rotationAlignment`.\n   * @default \"auto\"\n   */\n  pitchAlignment?: Alignment;\n  /** The rotation angle of the marker in degrees, relative to its `rotationAlignment` setting. A positive value will rotate the marker clockwise.\n   * @default 0\n   */\n  rotation?: number;\n  /** `map` aligns the `Marker`'s rotation relative to the map, maintaining a bearing as the map rotates.\n   * `viewport` aligns the `Marker`'s rotation relative to the viewport, agnostic to map rotations.\n   * `auto` is equivalent to `viewport`.\n   * @default \"auto\"\n   */\n  rotationAlignment?: Alignment;\n  /** The scale to use for the default marker if options.element is not provided.\n   * The default scale (1) corresponds to a height of `41px` and a width of `27px`.\n   * @default 1\n   */\n  scale?: number;\n  /** A Popup instance that is bound to the marker */\n  popup?: MapboxPopup;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n  onClick?: (e: MapboxEvent<MouseEvent>) => void;\n  onDragStart?: (e: MarkerDragEvent) => void;\n  onDrag?: (e: MarkerDragEvent) => void;\n  onDragEnd?: (e: MarkerDragEvent) => void;\n  children?: React.ReactNode;\n};\n\nconst defaultProps: Partial<MarkerProps> = {\n  draggable: false,\n  popup: null,\n  rotation: 0,\n  rotationAlignment: 'auto',\n  pitchAlignment: 'auto'\n};\n\n/* eslint-disable complexity,max-statements */\nfunction Marker(props: MarkerProps) {\n  const {map, mapLib} = useContext(MapContext);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const marker: MapboxMarker = useMemo(() => {\n    let hasChildren = false;\n    React.Children.forEach(props.children, el => {\n      if (el) {\n        hasChildren = true;\n      }\n    });\n    const options = {\n      ...props,\n      element: hasChildren ? document.createElement('div') : null\n    };\n\n    const mk = new mapLib.Marker(options).setLngLat([props.longitude, props.latitude]);\n\n    mk.getElement().addEventListener('click', (e: MouseEvent) => {\n      thisRef.current.props.onClick?.({\n        type: 'click',\n        target: mk,\n        originalEvent: e\n      });\n    });\n\n    mk.on('dragstart', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragStart?.(evt);\n    });\n    mk.on('drag', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDrag?.(evt);\n    });\n    mk.on('dragend', e => {\n      const evt = e as MarkerDragEvent;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragEnd?.(evt);\n    });\n\n    return mk;\n  }, []);\n\n  useEffect(() => {\n    marker.addTo(map.getMap());\n\n    return () => {\n      marker.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(marker.getElement(), props.style);\n  }, [props.style]);\n\n  if (marker.getLngLat().lng !== props.longitude || marker.getLngLat().lat !== props.latitude) {\n    marker.setLngLat([props.longitude, props.latitude]);\n  }\n  if (props.offset && !arePointsEqual(marker.getOffset(), props.offset)) {\n    marker.setOffset(props.offset);\n  }\n  if (marker.isDraggable() !== props.draggable) {\n    marker.setDraggable(props.draggable);\n  }\n  if (marker.getRotation() !== props.rotation) {\n    marker.setRotation(props.rotation);\n  }\n  if (marker.getRotationAlignment() !== props.rotationAlignment) {\n    marker.setRotationAlignment(props.rotationAlignment);\n  }\n  if (marker.getPitchAlignment() !== props.pitchAlignment) {\n    marker.setPitchAlignment(props.pitchAlignment);\n  }\n  if (marker.getPopup() !== props.popup) {\n    marker.setPopup(props.popup);\n  }\n\n  return createPortal(props.children, marker.getElement());\n}\n\nMarker.defaultProps = defaultProps;\n\n// @ts-ignore\nexport default React.memo(Marker);\n"]},"metadata":{},"sourceType":"module"}