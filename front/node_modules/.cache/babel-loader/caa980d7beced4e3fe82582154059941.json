{"ast":null,"code":"import * as React from 'react';\nimport { useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nfunction AttributionControl(props) {\n  const ctrl = useControl(_ref => {\n    let {\n      mapLib\n    } = _ref;\n    return new mapLib.AttributionControl(props);\n  }, {\n    position: props.position\n  });\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n  return null;\n}\n\nexport default React.memo(AttributionControl);","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAkBA,SAASC,kBAAT,CAA4BC,KAA5B,EAA0D;EACxD,MAAMC,IAAI,GAAGH,UAAU,CACrB;IAAA,IAAC;MAACI;IAAD,CAAD;IAAA,OAAc,IAAIA,MAAM,CAACH,kBAAX,CAA8BC,KAA9B,CAAd;EAAA,CADqB,EAErB;IACEG,QAAQ,EAAEH,KAAK,CAACG;EADlB,CAFqB,CAAvB;EAOAP,SAAS,CAAC,MAAK;IACb;IACAC,eAAe,CAACI,IAAI,CAACG,UAAN,EAAkBJ,KAAK,CAACK,KAAxB,CAAf;EACD,CAHQ,EAGN,CAACL,KAAK,CAACK,KAAP,CAHM,CAAT;EAKA,OAAO,IAAP;AACD;;AAED,eAAeV,KAAK,CAACW,IAAN,CAAWP,kBAAX,CAAf","names":["React","useEffect","applyReactStyle","useControl","AttributionControl","props","ctrl","mapLib","position","_container","style","memo"],"sources":["C:\\Users\\adrie\\Documents\\GitHub\\campusLive\\front\\node_modules\\react-map-gl\\src\\components\\attribution-control.ts"],"sourcesContent":["import * as React from 'react';\nimport {useEffect} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, MapboxAttributionControl} from '../types';\n\nexport type AttributionControlProps = {\n  /**\n   * If true , force a compact attribution that shows the full attribution on mouse hover.\n   * If false , force the full attribution control. The default is a responsive attribution\n   * that collapses when the map is less than 640 pixels wide.  */\n  compact?: boolean;\n  /** String or strings to show in addition to any other attributions. */\n  customAttribution?: string | string[];\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction AttributionControl(props: AttributionControlProps): null {\n  const ctrl = useControl<MapboxAttributionControl>(\n    ({mapLib}) => new mapLib.AttributionControl(props),\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default React.memo(AttributionControl);\n"]},"metadata":{},"sourceType":"module"}